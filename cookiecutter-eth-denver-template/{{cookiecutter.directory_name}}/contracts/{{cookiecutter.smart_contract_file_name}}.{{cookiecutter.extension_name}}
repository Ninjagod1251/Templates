// SPDX-License-Identifier: MIT
pragma solidity ^0.8.2;

import "@openzeppelin/token/ERC20/ERC20.sol";
import "@openzeppelin/access/Ownable.sol";

contract {{cookiecutter.smart_contract_file_name}} is ERC20, Ownable {

    /// An ERC20 that requires you have a separate ERC20 (known as the "upstream")

    ERC20 private upstream;

    constructor(address upstream_) ERC20("{{cookiecutter.token_name}}", "{{cookiecutter.token_symbol}}") {
        upstream = ERC20(upstream_);
    }
{%- if cookiecutter.use_modifier == 'y' %} 
    modifier hasUpstream(address to) {
        require(upstream.balanceOf(to) > 0);
        _;
    }
{%- endif %}

{%- if cookiecutter.use_mint == 'y' %}    
    function mint(address to, uint256 amount) public onlyOwner hasUpstream(to) {
        _mint(to, amount);
    }
{%- endif %}

}